# Unit file for running the API as a service with systemctl. 
# Usage
#  - Run `sudo systemctl restart api` to start or restart the service.
#  - Run `sudo systemctl enable api` to enable automatic startup.
#  - Run `sudo systemctl status api` to check the service's status.
#  - Run `sudo journalctl -u api` to view the logs.

[Unit]
Description=Greenlight API Service

# Wait until PostgreSQL is running and the network is "up" before starting.
After=postgresql.service
After=network-online.target
Wants=network-online.target

# Configure service start rate limiting. If the service is (re)started more 
# than 5 times in 600 seconds then don't permit it to start anymore.
StartLimitIntervalSec=600
StartLimitBurst=5

[Service]
# Execute the API binary as the greenlight user, loading the environment 
# variables from /etc/environment and using the working directory /home/
# greenlight.
# 
# In a production application, we would also set separate SMTP credentials 
# when starting the service, rather than relying on the defaults used when in
# development.
Type=exec
User=greenlight
Group=greenlight
EnvironmentFile=/etc/environment
WorkingDirectory=/home/greenlight
ExecStart=/home/greenlight/api -port=4000 -db-dsn=${GREENLIGHT_DB_DSN} -env=production

# Automatically restart the service after a 5-second wait if it exits with a 
# non-zero exit code. If it restarts more than 5 times in 600 seconds, then the 
# rate limit we configured above will be hit and it won't be restarted anymore.
Restart=on-failure
RestartSec=5

[Install]
# Start the service automatically at boot time (the 'multi-user.target' 
# describes a boot state when the system will accept logins).
WantedBy=multi-user.target